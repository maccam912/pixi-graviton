name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true

  build:
    needs: create_release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-13, macos-14]
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm install
      - run: npm run tauri build

      - name: Copy MSI Artifact for Windows
        if: matrix.os == 'windows-latest'
        run: cp ./src-tauri/target/release/bundle/msi/pixi-graviton_0.0.0_x64_en-US.msi ./pixi-graviton_0.0.0_x64_en-US.msi
      - name: Upload MSI Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./pixi-graviton_0.0.0_x64_en-US.msi
          asset_name: pixi-graviton_0.0.0_x64_en-US.msi
          asset_content_type: application/octet-stream
      - name: Copy NSIS Artifact for Windows
        if: matrix.os == 'windows-latest'
        run: cp ./src-tauri/target/release/bundle/nsis/pixi-graviton_0.0.0_x64-setup.exe ./pixi-graviton_0.0.0_x64-setup.exe
      - name: Upload NSIS Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./pixi-graviton_0.0.0_x64-setup.exe
          asset_name: pixi-graviton_0.0.0_x64-setup.exe
          asset_content_type: application/octet-stream
      - name: Copy macOS .app Artifact
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        run: cp -R ./src-tauri/target/release/bundle/macos/pixi-graviton.app ./pixi-graviton.app
      - name: Zip macOS .app Artifact
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        run: zip -r pixi-graviton_${{ matrix.os }}.app.zip pixi-graviton.app
      - name: Upload macOS .app Zip Artifact
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./pixi-graviton_${{ matrix.os }}.app.zip
          asset_name: pixi-graviton_${{ matrix.os }}.app.zip
          asset_content_type: application/zip
      - name: Copy macOS .dmg Artifact
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        run: cp ./src-tauri/target/release/bundle/dmg/pixi-graviton_0.0.0_${{ matrix.os }}.dmg ./pixi-graviton_0.0.0_${{ matrix.os }}.dmg
      - name: Upload macOS .dmg Artifact
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./pixi-graviton_0.0.0_${{ matrix.os }}.dmg
          asset_name: pixi-graviton_0.0.0_${{ matrix.os }}.dmg
          asset_content_type: application/octet-stream
